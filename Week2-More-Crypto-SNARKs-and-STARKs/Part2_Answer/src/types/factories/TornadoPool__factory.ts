/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TornadoPool, TornadoPoolInterface } from "../TornadoPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVerifier",
        name: "_verifier2",
        type: "address",
      },
      {
        internalType: "contract IVerifier",
        name: "_verifier16",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_levels",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "contract IERC6777",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_omniBridge",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l1Unwrapper",
        type: "address",
      },
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_l1ChainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_multisig",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedOutput",
        type: "bytes",
      },
    ],
    name: "NewCommitment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
    ],
    name: "NewNullifier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "PublicKey",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_EXT_AMOUNT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ambBridge",
    outputs: [
      {
        internalType: "contract IAMB",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_extAmount",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "calculatePublicAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "configureLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isCalledByOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l1Unwrapper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumDepositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimalWithdrawalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "multisig",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "omniBridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC6777",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "onTokenBridged",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct TornadoPool.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isL1Withdrawal",
            type: "bool",
          },
        ],
        internalType: "struct TornadoPool.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "onTransact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerChainId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct TornadoPool.Account",
        name: "_account",
        type: "tuple",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct TornadoPool.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct TornadoPool.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isL1Withdrawal",
            type: "bool",
          },
        ],
        internalType: "struct TornadoPool.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "registerAndTransact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC6777",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
    ],
    name: "rescueTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC6777",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct TornadoPool.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isL1Withdrawal",
            type: "bool",
          },
        ],
        internalType: "struct TornadoPool.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier16",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier2",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct TornadoPool.Proof",
        name: "_args",
        type: "tuple",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6101e0604052600380546001600160401b03191690553480156200002257600080fd5b5060405162003ab838038062003ab8833981016040819052620000459162000219565b846001600160a01b031663cd5965836040518163ffffffff1660e01b815260040160206040518083038186803b1580156200007f57600080fd5b505afa15801562000094573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000ba9190620001f3565b82848a8a60008263ffffffff1611620001055760405162461bcd60e51b815260040180806020018281038252602381526020018062003a956023913960400191505060405180910390fd5b60208263ffffffff161062000161576040805162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e2033320000604482015290519081900360640190fd5b6001600160e01b031960e092831b1660a0526001600160601b0319606091821b8116608052600160045594811b851660c05291821b841661010052919091529a8b1b811661012052988a1b89166101405294891b881661016052505090861b851661018052851b84166101a05290931b9091166101c052506200030f9050565b8051620001ee81620002f6565b919050565b60006020828403121562000205578081fd5b81516200021281620002f6565b9392505050565b6000806000806000806000806000806101408b8d03121562000239578586fd5b8a516200024681620002f6565b60208c0151909a506200025981620002f6565b60408c015190995063ffffffff8116811462000273578687fd5b60608c01519098506200028681620002f6565b60808c01519097506200029981620002f6565b60a08c0151909650620002ac81620002f6565b9450620002bc60c08c01620001e1565b9350620002cc60e08c01620001e1565b92506101008b01519150620002e56101208c01620001e1565b90509295989b9194979a5092959850565b6001600160a01b03811681146200030c57600080fd5b50565b60805160601c60a05160e01c60c05160601c60e0516101005160601c6101205160601c6101405160601c6101605160601c6101805160601c6101a05160601c6101c05160601c61366562000430600039806108d9528061102d52806115a4525080610f0852806120b3525080610f9952806112ec528061208a525080610dc7528061109252806112925280611358528061143d52806115775280611dc2528061205b528061218b528061224e528061230d5250806106f05280610a6f52508061090d5280610d7c5250806106315280610f2c5250806105825280611dfa525080610481528061055852806105a3528061065b525080610d58528061253952806125a2528061261252806126955250806107e45280611d8c52506136656000f3fe608060405234801561001057600080fd5b50600436106102485760003560e01c806390eeb02b1161013b578063db7af854116100b8578063ed33639f1161007c578063ed33639f1461044c578063f178e47c14610454578063fc0c546a14610467578063fc7e9c6f1461046f578063ff4d18151461047757610248565b8063db7af854146103f8578063e4a301161461040b578063e5285dcc1461041e578063e829558814610431578063ec7329591461044457610248565b8063ba70f757116100ff578063ba70f757146103c2578063bc063e1a14610351578063c2b40ae4146103ca578063cd87a3b4146103dd578063cea9d26f146103e557610248565b806390eeb02b14610379578063957d4cc8146103815780639eb9855f14610394578063b18855cf146103a7578063b2bc6e0f146103af57610248565b80634ecf518b116101c95780637fe24ffe1161018d5780637fe24ffe14610351578063840b2791146103595780638414cf0c146103615780638da5cb5b146103695780638f1c56bd1461037157610248565b80634ecf518b14610306578063522d0d701461031b57806361bbefc1146103235780636d9833e31461033657806378abb49b1461034957610248565b806338bf282e1161021057806338bf282e146102bb578063414a37ba146102ce57806342d90711146102d65780634783c35b146102eb5780634cf0f715146102f357610248565b80630ba54df61461024d57806317cc915c1461026b5780632570b7b41461028b578063270af851146102ab5780632fc0355f146102b3575b600080fd5b61025561047f565b6040516102629190612e9c565b60405180910390f35b61027e610279366004612b14565b6104a3565b6040516102629190612f1d565b61029e610299366004612c11565b6104b8565b6040516102629190612f28565b61027e61054b565b6102556106ee565b61029e6102c9366004612b2c565b610712565b61029e610893565b6102e96102e4366004612c11565b6108a5565b005b6102556108d7565b61027e610301366004612cda565b6108fb565b61030e610d56565b6040516102629190613538565b610255610d7a565b6102e9610331366004612d0d565b610d9e565b61027e610344366004612b14565b610e82565b61029e610ef2565b61029e610ef8565b61029e610f00565b610255610f06565b610255610f2a565b61029e610f4e565b61030e610f54565b6102e961038f366004612c56565b610f60565b6102e96103a2366004612d0d565b610f78565b610255610f97565b6102e96103bd366004612c23565b610fbb565b61029e610ff0565b61029e6103d8366004612b14565b61100b565b61030e61101d565b6102e96103f3366004612b4d565b611022565b6102e9610406366004612b8d565b61127d565b6102e9610419366004612c11565b61162c565b61027e61042c366004612b14565b6116e1565b61029e61043f366004612b14565b6116f6565b61029e611d66565b610255611d8a565b61029e610462366004612b14565b611dae565b610255611dc0565b61030e611de4565b61029e611df8565b7f000000000000000000000000000000000000000000000000000000000000000081565b60086020526000908152604090205460ff1681565b6000600160f81b82106104e65760405162461bcd60e51b81526004016104dd906131c0565b60405180910390fd5b6001600160f81b0319831380156105005750600160f81b83125b61051c5760405162461bcd60e51b81526004016104dd90613085565b818303600081121561054157806000036000805160206135e083398151915203610543565b805b949350505050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561062857507f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639e307dff6040518163ffffffff1660e01b815260040160206040518083038186803b1580156105fa57600080fd5b505afa15801561060e573d6000803e3d6000fd5b505050506040513d602081101561062457600080fd5b5051145b80156106e957507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d67bdd256040518163ffffffff1660e01b815260040160206040518083038186803b1580156106b257600080fd5b505afa1580156106c6573d6000803e3d6000fd5b505050506040513d60208110156106dc57600080fd5b50516001600160a01b0316145b905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006000805160206135e08339815191528310610776576040805162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64604482015290519081900360640190fd5b6000805160206135e083398151915282106107c25760405162461bcd60e51b81526004018080602001828103825260218152602001806135916021913960400191505060405180910390fd5b6107ca6127aa565b838152602081018390526040805163014cf2b360e51b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169163299e56609184916004909101908190839080838360005b8381101561083d578181015183820152602001610825565b5050505090500191505060206040518083038186803b15801561085f57600080fd5b505afa158015610873573d6000803e3d6000fd5b505050506040513d602081101561088957600080fd5b5051949350505050565b6000805160206135e083398151915281565b6108ad61054b565b6108c95760405162461bcd60e51b81526004016104dd9061314c565b6108d38282611e1c565b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081604001515160021415610a5f577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663598da1d183600001516040518060e00160405280866020015160001c8152602001866080015181526020018660a0015160001c8152602001866040015160008151811061097f57fe5b602002602001015160001c815260200186604001516001815181106109a057fe5b602002602001015160001c815260200186606001516000600281106109c157fe5b602002015160001c815260200186606001516001600281106109df57fe5b602002015190526040516001600160e01b031960e085901b168152610a08929190600401612fb8565b60206040518083038186803b158015610a2057600080fd5b505afa158015610a34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a589190612af8565b9050610d51565b81604001515160101415610d39577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166386fbc0ee8360000151604051806102a00160405280866020015160001c8152602001866080015181526020018660a0015160001c81526020018660400151600081518110610ae257fe5b602002602001015160001c81526020018660400151600181518110610b0357fe5b602002602001015160001c81526020018660400151600281518110610b2457fe5b602002602001015160001c81526020018660400151600381518110610b4557fe5b602002602001015160001c81526020018660400151600481518110610b6657fe5b602002602001015160001c81526020018660400151600581518110610b8757fe5b602002602001015160001c81526020018660400151600681518110610ba857fe5b602002602001015160001c81526020018660400151600781518110610bc957fe5b602002602001015160001c81526020018660400151600881518110610bea57fe5b602002602001015160001c81526020018660400151600981518110610c0b57fe5b602002602001015160001c81526020018660400151600a81518110610c2c57fe5b602002602001015160001c81526020018660400151600b81518110610c4d57fe5b602002602001015160001c81526020018660400151600c81518110610c6e57fe5b602002602001015160001c81526020018660400151600d81518110610c8f57fe5b602002602001015160001c81526020018660400151600e81518110610cb057fe5b602002602001015160001c81526020018660400151600f81518110610cd157fe5b602002602001015160001c81526020018660600151600060028110610cf257fe5b602002015160001c81526020018660600151600160028110610d1057fe5b602002015190526040516001600160e01b031960e085901b168152610a08929190600401612f70565b60405162461bcd60e51b81526004016104dd906133f1565b919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081602001511315610e785760208101516040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916323b872dd91610dff913391309190600401612eb0565b602060405180830381600087803b158015610e1957600080fd5b505af1158015610e2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e519190612af8565b5060075481602001511115610e785760405162461bcd60e51b81526004016104dd90613428565b6108d38282611e27565b600081610e9157506000610d51565b60035463ffffffff16805b63ffffffff8116600090815260026020526040902054841415610ec457600192505050610d51565b63ffffffff8116610ed3575060645b6000190163ffffffff8082169083161415610e9c575060009392505050565b60075481565b600160f81b81565b60065481565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60055481565b60035463ffffffff1681565b610f6983610fbb565b610f738282610d9e565b505050565b333014610e785760405162461bcd60e51b81526004016104dd906131e5565b7f000000000000000000000000000000000000000000000000000000000000000081565b80516001600160a01b03163314610fe45760405162461bcd60e51b81526004016104dd90612ff5565b610fed816124d7565b50565b60035463ffffffff1660009081526002602052604090205490565b60026020526000908152604090205481565b606481565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461106a5760405162461bcd60e51b81526004016104dd9061314c565b6001600160a01b0382166110905760405162461bcd60e51b81526004016104dd90613378565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614156110e25760405162461bcd60e51b81526004016104dd9061322b565b6001600160a01b0383166111425747600082156110ff5782611101565b815b6040519091506001600160a01b0385169082156108fc029083906000818181858888f1935050505015801561113a573d6000803e3d6000fd5b505050610f73565b6040516370a0823160e01b81526000906001600160a01b038516906370a0823190611171903090600401612e9c565b60206040518083038186803b15801561118957600080fd5b505afa15801561119d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c19190612d6e565b9050600082156111d157826111d3565b815b9050600081116111f55760405162461bcd60e51b81526004016104dd906133ba565b60405163a9059cbb60e01b81526001600160a01b0386169063a9059cbb906112239087908590600401612ed4565b602060405180830381600087803b15801561123d57600080fd5b505af1158015611251573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112759190612af8565b505050505050565b60008061128c83850185612d0d565b915091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b0316146112e15760405162461bcd60e51b81526004016104dd906132d0565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146113295760405162461bcd60e51b81526004016104dd9061302c565b806020015185101561134d5760405162461bcd60e51b81526004016104dd90613262565b6005548160200151017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016113a29190612e9c565b60206040518083038186803b1580156113ba57600080fd5b505afa1580156113ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f29190612d6e565b10156114105760405162461bcd60e51b81526004016104dd90613307565b600754816020015111156114365760405162461bcd60e51b81526004016104dd90613428565b60006005547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016114879190612e9c565b60206040518083038186803b15801561149f57600080fd5b505afa1580156114b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d79190612d6e565b604051639eb9855f60e01b815291900391503090639eb9855f906115019086908690600401613485565b600060405180830381600087803b15801561151b57600080fd5b505af192505050801561152c575060015b611623573d80801561155a576040519150601f19603f3d011682016040523d82523d6000602084013e61155f565b606091505b5060405163a9059cbb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906115ce907f0000000000000000000000000000000000000000000000000000000000000000908690600401612ed4565b602060405180830381600087803b1580156115e857600080fd5b505af11580156115fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116209190612af8565b50505b50505050505050565b600054610100900460ff16806116455750611645612523565b80611653575060005460ff16155b61168e5760405162461bcd60e51b815260040180806020018281038252602e8152602001806135b2602e913960400191505060405180910390fd5b600054610100900460ff161580156116b9576000805460ff1961ff0019909116610100171660011790555b6116c38383611e1c565b6116cb612534565b8015610f73576000805461ff0019169055505050565b60009081526008602052604090205460ff1690565b60008161172457507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c610d51565b816001141561175457507f1a332ca2cd2436bdc6796e6e4244ebf6f7e359868b7252e55342f766e4088082610d51565b816002141561178457507f2fb19ac27499bdf9d7d3b387eff42b6d12bffbc6206e81d0ef0b0d6b24520ebd610d51565b81600314156117b457507f18d0d6e282d4eacbf18efc619a986db763b75095ed122fac7d4a49418daa42e1610d51565b81600414156117e457507f054dec40f76a0f5aaeff1a85a4a3721b92b4ad244362d30b0ef8ed7033de11d3610d51565b816005141561181457507f1d24c91f8d40f1c2591edec19d392905cf5eb01eada48d71836177ef11aea5b2610d51565b816006141561184457507f0fb63621cfc047eba2159faecfa55b120d7c81c0722633ef94e20e27675e378f610d51565b816007141561187457507f277b08f214fe8c5504a79614cdec5abd7b6adc9133fe926398684c82fd798b44610d51565b81600814156118a457507f2633613437c1fd97f7c798e2ea30d52cfddee56d74f856a541320ae86ddaf2de610d51565b81600914156118d357507e768963fa4b993fbfece3619bfaa3ca4afd7e3864f11b09a0849dbf4ad25807610d51565b81600a141561190357507f0e63ff9df484c1a21478bd27111763ef203177ec0a7ef3a3cd43ec909f587bb0610d51565b81600b141561193357507f0e6a4bfb0dd0ac8bf5517eaac48a95ba783dabe9f64494f9c892d3e8431eaab3610d51565b81600c141561196357507f0164a46b3ffff8baca00de7a130a63d105f1578076838502b99488505d5b3d35610d51565b81600d141561199357507f145a6f1521c02b250cc76eb35cd67c9b0b22473577de3778e4c51903836c8957610d51565b81600e14156119c357507f29849fc5b55303a660bad33d986fd156d48516ec58a0f0a561a03b704a802254610d51565b81600f14156119f357507f26639dd486b374e98ac6da34e8651b3fca58c51f1c2f857dd82045f27fc8dbe6610d51565b8160101415611a2357507f2aa39214b887ee877e60afdb191390344c68177c30a0b8646649774174de5e33610d51565b8160111415611a5357507f09b397d253e41a521d042ffe01f8c33ae37d4c7da21af68693aafb63d599d708610d51565b8160121415611a8357507f02fbfd397ad901cea38553239aefec016fcb6a19899038503f04814cbb79a511610d51565b8160131415611ab357507f266640a877ec97a91f6c95637f843eeac8718f53f311bac9cba7d958df646f9d610d51565b8160141415611ae357507f29f9a0a07a22ab214d00aaa0190f54509e853f3119009baecb0035347606b0a9610d51565b8160151415611b1357507f0a1fda67bffa0ab3a755f23fdcf922720820b6a96616a5ca34643cd0b935e3d6610d51565b8160161415611b4357507f19507199eb76b5ec5abe538a01471d03efb6c6984739c77ec61ada2ba2afb389610d51565b8160171415611b7357507f26bd93d26b751484942282e27acfb6d193537327a831df6927e19cdfc73c3e64610d51565b8160181415611ba357507f2eb88a9c6b00a4bc6ea253268090fe1d255f6fe02d2eb745517723aae44d7386610d51565b8160191415611bd357507f13e50d0bda78be97792df40273cbb16f0dc65c0697d81a82d07d0f6eee80a164610d51565b81601a1415611c0357507f2ea95776929000133246ff8d9fdcba179d0b262b9e910558309bac1c1ec03d7a610d51565b81601b1415611c3357507f1a640d6ef66e356c795396c0957b06a99891afe0c493f4d0bdfc0450764bae60610d51565b81601c1415611c6357507f2b17979f2c2048dd9e4ee5f482cced21435ea8cc54c32f80562e39a5016b0496610d51565b81601d1415611c9357507f29ba6a30de50542e261abfc7ee0c68911002d3acd4dd4c02ad59aa96805b20bb610d51565b81601e1415611cc357507f103fcf1c8a98ebe50285f6e669077a579308311fd44bb6895d5da7ba7fd3564e610d51565b81601f1415611cf357507f166bdd01780976e655f5278260c638dcf10fe7c136f37c9152cbcaabef901f4d610d51565b8160201415611d2357507f2712c601a9b8b2abd396a619327095d3f1ea86a6c07d6df416a3973a1a4b3ce5610d51565b6040805162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b604482015290519081900360640190fd5b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60016020526000908152604090205481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600354640100000000900463ffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600691909155600755565b60026004541415611e7f576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026004556020820151611e9290610e82565b611eae5760405162461bcd60e51b81526004016104dd906130b1565b60005b826040015151811015611f0357611ede83604001518281518110611ed157fe5b60200260200101516116e1565b15611efb5760405162461bcd60e51b81526004016104dd90613348565b600101611eb1565b506000805160206135e083398151915281604051602001611f249190613472565b6040516020818303038152906040528051906020012060001c81611f4457fe5b068260a0015160001c14611f6a5760405162461bcd60e51b81526004016104dd906130de565b611f7c816020015182606001516104b8565b826080015114611f9e5760405162461bcd60e51b81526004016104dd90613056565b611fa7826108fb565b611fc35760405162461bcd60e51b81526004016104dd90613299565b60005b82604001515181101561201a5760016008600085604001518481518110611fe957fe5b6020908102919091018101518252810191909152604001600020805460ff1916911515919091179055600101611fc6565b506000816020015112156122425780516001600160a01b031661204f5760405162461bcd60e51b81526004016104dd90613115565b8060c001511561216d577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000083602001516000037f000000000000000000000000000000000000000000000000000000000000000085600001516040516020016120e8929190612e75565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161211593929190612eed565b602060405180830381600087803b15801561212f57600080fd5b505af1158015612143573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121679190612af8565b50612219565b8051602082015160405163a9059cbb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169263a9059cbb926121c59260009190910390600401612ed4565b602060405180830381600087803b1580156121df57600080fd5b505af11580156121f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122179190612af8565b505b600654816020015160000310156122425760405162461bcd60e51b81526004016104dd90613175565b6060810151156122f6577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb826040015183606001516040518363ffffffff1660e01b81526004016122a2929190612ed4565b602060405180830381600087803b1580156122bc57600080fd5b505af11580156122d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122f49190612af8565b505b6040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190612342903090600401612e9c565b60206040518083038186803b15801561235a57600080fd5b505afa15801561236e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123929190612d6e565b600555606082015180516020909101516123ac91906125f9565b5060608201515160035460808301516040517ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd936123ff93909264010000000090910463ffffffff166001190191612f31565b60405180910390a160608201517ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd90600160200201516001600360049054906101000a900463ffffffff16038360a0015160405161245f93929190612f31565b60405180910390a160005b8260400151518110156124cd577f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce836040015182815181106124a857fe5b60200260200101516040516124bd9190612f28565b60405180910390a160010161246a565b5050600160045550565b80600001516001600160a01b03167f2c1ca5c14df2aba59d26842c5ff53f6817052ef34f6f7537f8b4c9e3805a5e5082602001516040516125189190612f56565b60405180910390a250565b600061252e306127a4565b15905090565b60005b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff16101561259c5761257a8163ffffffff166116f6565b63ffffffff821660009081526001602081905260409091209190915501612537565b506125cc7f000000000000000000000000000000000000000000000000000000000000000063ffffffff166116f6565b6000805260026020527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b55565b60035460009063ffffffff6401000000009091048116907f0000000000000000000000000000000000000000000000000000000000000000811660020a168114156126755760405162461bcd60e51b81526004018080602001828103825260308152602001806136006030913960400191505060405180910390fd5b600263ffffffff821604600061268b8686610712565b905060008060015b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff16101561273c5760018516612700578392506126e18163ffffffff166116f6565b63ffffffff82166000908152600160205260409020859055915061271c565b63ffffffff811660009081526001602052604090205492508391505b6127268383610712565b9350600263ffffffff8616049450600101612693565b50506003805463ffffffff1981166064600163ffffffff9384160183160682169081178355600090815260026020819052604090912094909455815467ffffffff00000000191664010000000094870190911693909302929092179091555090949350505050565b3b151590565b60405180604001604052806002906020820280368337509192915050565b8035610d518161356d565b600082601f8301126127e3578081fd5b6040516040810181811067ffffffffffffffff8211171561280057fe5b8060405250808385604086011115612816578384fd5b835b6002811015612837578135835260209283019290910190600101612818565b509195945050505050565b600082601f830112612852578081fd5b8135602067ffffffffffffffff82111561286857fe5b808202612876828201613549565b838152828101908684018388018501891015612890578687fd5b8693505b858410156128b2578035835260019390930192918401918401612894565b50979650505050505050565b8035610d5181613582565b600082601f8301126128d9578081fd5b813567ffffffffffffffff8111156128ed57fe5b612900601f8201601f1916602001613549565b818152846020838601011115612914578283fd5b816020850160208301379081016020019190915292915050565b60006040828403121561293f578081fd5b6040516040810167ffffffffffffffff828210818311171561295d57fe5b81604052829350843591506129718261356d565b9082526020840135908082111561298757600080fd5b50612994858286016128c9565b6020830152505092915050565b600060e082840312156129b2578081fd5b6129bc60e0613549565b90506129c7826127c8565b8152602082013560208201526129df604083016127c8565b604082015260608201356060820152608082013567ffffffffffffffff80821115612a0957600080fd5b612a15858386016128c9565b608084015260a0840135915080821115612a2e57600080fd5b50612a3b848285016128c9565b60a083015250612a4d60c083016128be565b60c082015292915050565b600060e08284031215612a69578081fd5b612a7360c0613549565b9050813567ffffffffffffffff80821115612a8d57600080fd5b612a99858386016128c9565b8352602084013560208401526040840135915080821115612ab957600080fd5b50612ac684828501612842565b604083015250612ad983606084016127d3565b606082015260a0820135608082015260c082013560a082015292915050565b600060208284031215612b09578081fd5b815161054181613582565b600060208284031215612b25578081fd5b5035919050565b60008060408385031215612b3e578081fd5b50508035926020909101359150565b600080600060608486031215612b61578081fd5b8335612b6c8161356d565b92506020840135612b7c8161356d565b929592945050506040919091013590565b60008060008060608587031215612ba2578182fd5b8435612bad8161356d565b935060208501359250604085013567ffffffffffffffff80821115612bd0578384fd5b818701915087601f830112612be3578384fd5b813581811115612bf1578485fd5b886020828501011115612c02578485fd5b95989497505060200194505050565b60008060408385031215612b3e578182fd5b600060208284031215612c34578081fd5b813567ffffffffffffffff811115612c4a578182fd5b6105438482850161292e565b600080600060608486031215612c6a578081fd5b833567ffffffffffffffff80821115612c81578283fd5b612c8d8783880161292e565b94506020860135915080821115612ca2578283fd5b612cae87838801612a58565b93506040860135915080821115612cc3578283fd5b50612cd0868287016129a1565b9150509250925092565b600060208284031215612ceb578081fd5b813567ffffffffffffffff811115612d01578182fd5b61054384828501612a58565b60008060408385031215612d1f578182fd5b823567ffffffffffffffff80821115612d36578384fd5b612d4286838701612a58565b93506020850135915080821115612d57578283fd5b50612d64858286016129a1565b9150509250929050565b600060208284031215612d7f578081fd5b5051919050565b8060005b6002811015612da9578151845260209384019390910190600101612d8a565b50505050565b60008151808452815b81811015612dd457602081850181015186830182015201612db8565b81811115612de55782602083870101525b50601f01601f19169290920160200192915050565b600060018060a01b03808351168452602083015160208501528060408401511660408501525060608201516060840152608082015160e06080850152612e4360e0850182612daf565b905060a083015184820360a0860152612e5c8282612daf565b91505060c0830151151560c08501528091505092915050565b6bffffffffffffffffffffffff19606093841b811682529190921b16601482015260280190565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b600060018060a01b038516825283602083015260606040830152612f146060830184612daf565b95945050505050565b901515815260200190565b90815260200190565b600084825263ffffffff8416602083015260606040830152612f146060830184612daf565b600060208252612f696020830184612daf565b9392505050565b60006102c0808352612f8481840186612daf565b91505060208083018460005b6015811015612fad57815183529183019190830190600101612f90565b505050509392505050565b6000610100808352612fcc81840186612daf565b91505060208083018460005b6007811015612fad57815183529183019190830190600101612fd8565b6020808252601c908201527f6f6e6c79206f776e65722063616e206265207265676973746572656400000000604082015260600190565b60208082526010908201526f6f6e6c79206f6d6e692062726964676560801b604082015260600190565b602080825260159082015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b604082015260600190565b602080825260129082015271125b9d985b1a5908195e1d08185b5bdd5b9d60721b604082015260600190565b602080825260139082015272125b9d985b1a59081b595c9adb19481c9bdbdd606a1b604082015260600190565b6020808252601c908201527f496e636f72726563742065787465726e616c2064617461206861736800000000604082015260600190565b6020808252601e908201527f43616e277420776974686472617720746f207a65726f20616464726573730000604082015260600190565b6020808252600f908201526e6f6e6c7920676f7665726e616e636560881b604082015260600190565b6020808252602b908201527f616d6f756e74206973206c657373207468616e206d696e696d616c576974686460408201526a1c985dd85b105b5bdd5b9d60aa1b606082015260800190565b6020808252600b908201526a496e76616c69642066656560a81b604082015260600190565b60208082526026908201527f63616e2062652063616c6c6564206f6e6c792066726f6d206f6e546f6b656e426040820152651c9a5919d95960d21b606082015260800190565b60208082526019908201527f63616e206e6f742072657363756520706f6f6c20617373657400000000000000604082015260600190565b6020808252601f908201527f616d6f756e742066726f6d2062726964676520697320696e636f727265637400604082015260600190565b60208082526019908201527f496e76616c6964207472616e73616374696f6e2070726f6f6600000000000000604082015260600190565b6020808252601f908201527f70726f766964656420746f6b656e206973206e6f7420737570706f7274656400604082015260600190565b60208082526021908201527f62726964676520646964206e6f742073656e6420656e6f75676820746f6b656e6040820152607360f81b606082015260800190565b602080825260169082015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b604082015260600190565b60208082526022908201527f544f524e3a2063616e206e6f742073656e6420746f207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601e908201527f544f524e3a20747279696e6720746f2073656e6420302062616c616e63650000604082015260600190565b60208082526017908201527f756e737570706f7274656420696e70757420636f756e74000000000000000000604082015260600190565b6020808252602a908201527f616d6f756e74206973206c6172676572207468616e206d6178696d756d4465706040820152691bdcda5d105b5bdd5b9d60b21b606082015260800190565b600060208252612f696020830184612dfa565b600060408252835160e060408401526134a2610120840182612daf565b60208681015160608601526040870151858303603f190160808701528051808452908201935090918491908301905b808310156134f157845182529383019360019290920191908301906134d1565b506060880151935061350660a0870185612d86565b608088015160e087015260a08801516101008701528581038387015261352c8188612dfa565b98975050505050505050565b63ffffffff91909116815260200190565b60405181810167ffffffffffffffff8111828210171561356557fe5b604052919050565b6001600160a01b0381168114610fed57600080fd5b8015158114610fed57600080fdfe5f72696768742073686f756c6420626520696e7369646520746865206669656c64496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a656430644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000014d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c65617665732063616e206265206164646564a26469706673582212203cb4488219be4a4cb9a969712f24e5eeabc7c825b4cd8537e4acc3013fe4079864736f6c634300070600335f6c6576656c732073686f756c642062652067726561746572207468616e207a65726f";

export class TornadoPool__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _verifier2: string,
    _verifier16: string,
    _levels: BigNumberish,
    _hasher: string,
    _token: string,
    _omniBridge: string,
    _l1Unwrapper: string,
    _governance: string,
    _l1ChainId: BigNumberish,
    _multisig: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TornadoPool> {
    return super.deploy(
      _verifier2,
      _verifier16,
      _levels,
      _hasher,
      _token,
      _omniBridge,
      _l1Unwrapper,
      _governance,
      _l1ChainId,
      _multisig,
      overrides || {}
    ) as Promise<TornadoPool>;
  }
  getDeployTransaction(
    _verifier2: string,
    _verifier16: string,
    _levels: BigNumberish,
    _hasher: string,
    _token: string,
    _omniBridge: string,
    _l1Unwrapper: string,
    _governance: string,
    _l1ChainId: BigNumberish,
    _multisig: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier2,
      _verifier16,
      _levels,
      _hasher,
      _token,
      _omniBridge,
      _l1Unwrapper,
      _governance,
      _l1ChainId,
      _multisig,
      overrides || {}
    );
  }
  attach(address: string): TornadoPool {
    return super.attach(address) as TornadoPool;
  }
  connect(signer: Signer): TornadoPool__factory {
    return super.connect(signer) as TornadoPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TornadoPoolInterface {
    return new utils.Interface(_abi) as TornadoPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TornadoPool {
    return new Contract(address, _abi, signerOrProvider) as TornadoPool;
  }
}
